
# ====================================================
# trace-replay
# ====================================================

Intro:
A simple trace replayer, based on previous Moren's code. Moren's code is too overkilled and complex. I modified the code to let it more readable and easier. I uses posix AIO to replay trace event instead of multi thread way.

Requirement:
1. If you want to replay a trace, you need to do preprocess by trace-edit, then feel free to substitute trace name in Config file

2. Need g++ version 4.8 or above to compile it, since our timer is from c++11 standard to provide high resolute timer. I already install g++ 4.8 in UCARE machine.

3. Feel free to change config file which is Config.txt, but need one WHITE SPACE between

Compile:
Already include Makefile, simply run "make" to compile and "make clean" to remove.

Logic:
Read preprocessed trace to a resuable TraceEvent struct (save memory) and push that struct into a global queue. Set up global buffer for those IO request, if you don't want to use global buffer, simply go to IOutil.h, set macro USE_GLOBAL_BUFF to false. Then let timmer begin to record time, once event time reached, submit the IO request. When the IO request complete, the callback function will be called. Then record the output to one log output file. Once all IO request completed, the program exit.

Output Format:
For each line: event time, block number, block count, write or read, latency, throughput,
		current submitCount, current completeCount, this request's submitCount, this request's complete count;

Contact:
Any question, contact chengwu@uchicago.edu

